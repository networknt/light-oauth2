{"version":3,"sources":["components/ErrorMessage.js","components/Login.js","components/ResetPassword.js","components/ForgetPassword.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","error","color","ErrorMessage","props","classes","className","dangerouslySetInnerHTML","__html","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Login","search","window","location","params","URLSearchParams","useState","username","setUsername","password","setPassword","remember","setRemember","get","state","clientId","userType","redirectUri","setError","redirectUrl","setRedirectUrl","denyUrl","setDenyUrl","scopes","setScopes","handleAccept","event","preventDefault","href","ScopeItems","List","component","aria-label","map","item","index","ListItem","button","ListItemText","key","primary","Container","maxWidth","CssBaseline","noValidate","onSubmit","Typography","variant","Divider","Button","type","onClick","pathArray","split","logoutPath","fetch","credentials","then","response","ok","Error","statusText","catch","console","log","toString","Avatar","data","j_username","j_password","client_id","Object","assign","user_type","redirect_uri","formData","keys","encodeURIComponent","join","headers","process","REACT_APP_SAAS_URL","method","redirect","json","denyUri","text","errorMessage","cmd","host","service","action","version","email","url","JSON","stringify","replace","TextField","required","fullWidth","id","label","name","value","autoComplete","autoFocus","onChange","e","target","FormControlLabel","control","Checkbox","to","ResetPassword","newPassword","setNewPassword","passwordConfirm","setPasswordConfirm","token","submitForm","a","description","disabled","ForgetPassword","setEmail","App","exact","path","Boolean","hostname","match","createMuiTheme","typography","useNextVariants","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73febdf8.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    error: {\n        color: '#ff0000',\n    },\n}));\n\nfunction ErrorMessage(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.error}  dangerouslySetInnerHTML={ createMarkup(props.error) } />\n    )\n}\n\nfunction createMarkup(error) {\n  return {__html: error};\n}\n\nexport default ErrorMessage;\n","import React,  {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ErrorMessage from './ErrorMessage';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nfunction Login() {\n  const classes = useStyles();\n\n  let search = window.location.search;\n  let params = new URLSearchParams(search);\n  //console.log(\"client_id = \", params.get('client_id'));\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [remember, setRemember] = useState(false);\n  const [state] = useState(params.get('state') == null ? '' : params.get('state'));\n  const [clientId] = useState(params.get('client_id') == null ? '' : params.get('client_id'));\n  const [userType] = useState(params.get('user_type') == null ? '' : params.get('user_type'));\n  const [redirectUri] = useState(params.get('redirect_uri') == null ? '' : params.get('redirect_uri'));\n  const [error, setError] = useState('');\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [denyUrl, setDenyUrl] = useState(null);\n  const [scopes, setScopes] = useState([]);\n\n  const handleChangeUsername = e => {\n    setUsername(e.target.value)\n  };\n\n  const handleChangePassword = e => {\n    setPassword(e.target.value)\n  };\n\n  const handleChangeRemember = e => {\n    setRemember(e.target.value)\n  };\n\n  const handleAccept = event => {\n    event.preventDefault();\n    //console.log(\"handleAccept is called\");\n    window.location.href = redirectUrl;\n  }\n\n  const handleCancel = event => {\n    event.preventDefault();\n    // here we use the redirectUrl to construct the deny url because the cookies\n    // are saved to the redirect domain instead of signin.lightapi.net domain.\n    //console.log(\"redirectUrl = \", redirectUrl);\n    let pathArray = redirectUrl.split('/');\n    let logoutPath = pathArray[0] + '//' + pathArray[2] + '/logout';\n    //console.log(\"fetch url = \", logoutPath);\n    // remove the server set cookies as the Javascript cannot access some of them. \n    fetch(logoutPath, { credentials: 'include'})\n    .then(response => {\n      if(response.ok) {\n        window.location.href = denyUrl;\n      } else {\n        throw Error(response.statusText);\n      }\n    })\n    .catch(error => {\n        console.log(\"error=\", error);\n        setError(error.toString());\n    });\n  }\n\n  function ScopeItems() {\n    return (\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        {scopes.map((item, index) => (\n          <ListItem button>\n            <ListItemText key={index} primary={item} />\n          </ListItem>\n        ))}\n      </List>\n    )\n  }\n\n  const handleSubmit = event => {\n    //console.log(\"username = \" + username + \" password = \" + password + \" remember = \" + remember);\n    //console.log(\"state = \" + state + \" clientId = \" + clientId + \" userType = \" + userType + \" redirectUri = \" + redirectUri);\n    event.preventDefault();\n\n    // state, user_type and redirect_uri might be empty\n    let data = {\n      j_username: username,\n      j_password: password,\n      remember: remember ? 'Y' : 'N',\n      client_id: clientId\n    };\n\n    Object.assign(data, (state) && { state: state}, (userType) && {user_type: userType}, (redirectUri) && {redirect_uri: redirectUri})\n    //console.log(\"data = \" + data);\n    const formData = Object.keys(data).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key])).join('&');\n\n    //console.log(formData);\n    const headers = {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        ...(process.env.REACT_APP_SAAS_URL) && {'service_url': process.env.REACT_APP_SAAS_URL}\n    };\n    //console.log(headers);\n\n    fetch(\"/oauth2/code\", {\n      method: 'POST',\n      redirect: 'follow',\n      credentials: 'include',\n      headers: headers,\n      body: formData\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.json();\n    })\n    .then(json => {\n      //console.log(json);\n      setRedirectUrl(json.redirectUri);\n      setDenyUrl(json.denyUri);\n      setScopes(json.scopes);\n    })\n    .catch(error => {\n        error.text().then(errorMessage => {\n        console.log(\"error=\", errorMessage);\n        const data = {\n          email: username,\n          password: password\n        };\n        const cmd = {\n          host: 'lightapi.net',\n          service: 'user',\n          action: 'loginUser',\n          version: '0.1.0',\n          data: data\n        };\n        const url = '/portal/query?cmd=' + encodeURIComponent(JSON.stringify(cmd));\n        const message = 'Login Failed! Click <a href=\"link\">here</a> to identify root cause.'\n        setError(message.replace('link', url));\n      })\n    });\n  };\n  \n  if(redirectUrl !== null) {\n    //console.log(\"display consent\");\n    //console.log(scopes);\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <form className={classes.form} noValidate onSubmit={handleAccept}>\n            <Typography component=\"h1\" variant=\"h5\">\n              Consent\n            </Typography>  \n            This application would like to access: \n            <Divider/>\n            <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n              <ScopeItems/>\n             </List>\n            <Divider/>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={handleCancel}\n              className={classes.submit}\n            >\n              Deny\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleAccept}\n              className={classes.submit}\n            >\n              Accept\n            </Button>\n          </form>  \n        </div>\n      </Container>  \n    )\n  } \n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <ErrorMessage error={error}/>\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"j_username\"\n                label=\"Email\"\n                name=\"j_username\"\n                value={username}\n                autoComplete=\"username\"\n                autoFocus\n                onChange={handleChangeUsername}\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"j_password\"\n                value={password}\n                label=\"Password\"\n                type=\"password\"\n                id=\"j_password\"\n                autoComplete=\"password\"\n                onChange={handleChangePassword}\n            />\n            <TextField\n                name=\"state\"\n                value={state}\n                type=\"hidden\"\n                id=\"state\"\n            />\n            <TextField\n                name=\"client_id\"\n                value={clientId}\n                type=\"hidden\"\n                id=\"client_id\"\n            />\n            <TextField\n                name=\"user_type\"\n                value={userType}\n                type=\"hidden\"\n                id=\"user_type\"\n            />\n            <TextField\n                name=\"redirect_uri\"\n                value={redirectUri}\n                type=\"hidden\"\n                id=\"redirect_uri\"\n            />\n            <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n                onChange={handleChangeRemember}\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </form>\n          <div>Forget your password? <Link to=\"/forget\">Reset Here</Link></div>\n        </div>\n      </Container>\n  );\n}\n\nexport default Login;\n","import React,  {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ErrorMessage from './ErrorMessage';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nfunction ResetPassword(props) {\n  let params = new URLSearchParams(props.location.search);\n  //console.log(\"token = \", params.get('token'));\n  //console.log(\"email = \", params.get('email'));\n\n  const classes = useStyles();\n  const [newPassword, setNewPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  const [error, setError] = useState('');\n\n  const [email] = useState(params.get('email') == null ? '' : params.get('email'));\n  const [token] = useState(params.get('token') == null ? '' : params.get('token'));\n\n  const handleChangeNewPassword = e => {\n    setNewPassword(e.target.value)\n  };\n\n  const handleChangePasswordConfirm = e => {\n    setPasswordConfirm(e.target.value)\n  };\n\n  const handleSubmit = event => {\n    //console.log(\"email = \" + email + \" token = \" + token);\n    event.preventDefault();\n    const data = { email, token, newPassword, passwordConfirm };\n    //console.log(\"data = \", data);\n    const action = {\n      'host': 'lightapi.net',\n      'service': 'user',\n      'action': 'resetPassword',\n      'version': '0.1.0',\n      'data': data\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    submitForm('/portal/command', headers, action);\n  };\n\n  const submitForm = async (url, headers, action) => {\n    try {\n      const response = await fetch(url, { method: 'POST', body: JSON.stringify(action), headers});\n      if (!response.ok) {\n        throw response;\n      }\n      const data = await response.json();\n      //console.log(data);\n      setError(\"The password has been reset.\");\n    } catch (e) {\n      const error = await e.json();\n      console.log(error);\n      setError(error.description);\n    }\n  };\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Reset Password\n          </Typography>\n          <ErrorMessage error={error}/>\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                disabled\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                value={email}\n                autoComplete=\"email\"\n                autoFocus\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"newPassword\"\n                value={newPassword}\n                label=\"New Password\"\n                type=\"password\"\n                id=\"newPassword\"\n                autoComplete=\"newPassword\"\n                onChange={handleChangeNewPassword}\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"passwordConfirm\"\n                value={passwordConfirm}\n                label=\"Password Confirm\"\n                type=\"password\"\n                id=\"passwordConfirm\"\n                autoComplete=\"passwordConfirm\"\n                onChange={handleChangePasswordConfirm}\n            />\n            <TextField\n                name=\"token\"\n                value={token}\n                type=\"hidden\"\n                id=\"token\"\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </Container>\n  );\n}\n\nexport default ResetPassword;","import React,  {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ErrorMessage from './ErrorMessage';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nfunction ForgetPassword() {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n\n  const handleChangeEmail = e => {\n    setEmail(e.target.value)\n  };\n\n  const handleSubmit = event => {\n    //console.log(\"email = \", email);\n    event.preventDefault();\n    const data = { email };\n    //console.log(\"data = \", data);\n    const action = {\n      'host': 'lightapi.net',\n      'service': 'user',\n      'action': 'forgetPassword',\n      'version': '0.1.0',\n      'data': data\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    submitForm('/portal/command', headers, action);\n  };\n\n  const submitForm = async (url, headers, action) => {\n    try {\n      const response = await fetch(url, { method: 'POST', body: JSON.stringify(action), headers});\n      if (!response.ok) {\n        throw response;\n      }\n      const data = await response.json();\n      //console.log(data);\n      setError(\"An Email has been sent.\");\n    } catch (e) {\n      const error = await e.json();\n      console.log(error);\n      setError(error.description);\n      //props.history.push();\n    }\n  };\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Forget Password\n          </Typography>\n          <ErrorMessage error={error}/>\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                value={email}\n                autoComplete=\"email\"\n                autoFocus\n                onChange={handleChangeEmail}\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </Container>\n  );\n}\n\nexport default ForgetPassword;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './components/Login';\nimport ResetPassword from './components/ResetPassword';\nimport ForgetPassword from './components/ForgetPassword';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/reset\" component={ResetPassword} />\n      <Route exact path=\"/forget\" component={ForgetPassword} />\n    </Switch>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nReactDOM.render(\n    <HashRouter>\n        <MuiThemeProvider theme={theme}>\n            <App />\n        </MuiThemeProvider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}